
# Time complexity: O(M*N)
# Space complexity: O(m * n)
class Solution:
    def uniquePathsWithObstacles(self, obstacleGrid: list) -> int:

        m = len(obstacleGrid)
        n = len(obstacleGrid[0])

        # 要注意base case，有三种不同的情况
        # [1,0][0,0], [0,0][0,1]  ->r = 0
        # [0,1][0,0], [0,0][1,0]  -> r = 1
        r = [[1 for i in range(n)] for i in range(m)]

        if m == 0 and n == 0:
            return -1
        if obstacleGrid[0][0] == 1:
            return 0

        # 前面如果没有1的话，可以走通，一旦有一个1了，后面就都走不通了
        for i in range(1, n):
            r[0][i] = min(r[0][i - 1], 1 - obstacleGrid[0][i])

        for i in range(1, m):
            r[i][0] = min(r[i - 1][0], 1 - obstacleGrid[i][0])

        for i in range(1, m):
            for j in range(1, n):
                if obstacleGrid[i][j] == 1:
                    r[i][j] = 0
                else:
                    r[i][j] = r[i - 1][j] + r[i][j - 1]
        return r[m - 1][n - 1]

s = Solution()
obstacleGrid = [[0,0,0,0,0,1,0,1,0,0,0,0,1,0,0,0,0,0],[0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,1,0,0],[1,0,0,0,0,0,1,0,0,0,0,0,1,0,1,1,0,1],[0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0],[0,0,0,0,0,1,0,0,0,0,1,1,0,1,0,0,0,0],[1,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,1,0],[0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0],[0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0],[0,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0],[0,1,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1],[0,1,0,1,0,1,0,0,0,0,0,0,0,1,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1],[1,0,1,1,0,0,0,0,0,0,1,0,1,0,0,0,1,0],[0,0,0,1,0,0,0,0,1,1,1,0,0,1,0,1,1,0],[0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,1,1,0,0,1,0,0,0,0,0,0,0,1,1,0,0,0],[0,0,0,0,0,0,1,0,1,0,0,1,0,1,1,1,0,0],[0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,1,1],[0,1,0,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0],[1,0,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0],[0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[0,1,0,0,0,0,0,1,0,0,0,0,0,0,1,1,1,0],[1,0,1,0,1,0,0,0,0,0,0,1,1,0,0,0,0,1],[1,0,0,0,0,0,1,1,0,0,0,1,0,0,0,0,0,0]]
print(s.uniquePathsWithObstacles(obstacleGrid))


# [0,0,0,0,0,1,0,1,0,0,0,0,1,0,0,0,0,0]
# [0,0,0,0,0,0,1,0,0,0,0,1,0,1,0,1,0,0]